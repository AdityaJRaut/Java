package com.spring.crud.service;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.PageRequest;
import org.springframework.stereotype.Service;

import com.spring.crud.exception.StudentNotFoundException;
import com.spring.crud.model.Student;
import com.spring.crud.repository.StudentRepository;

import jakarta.persistence.EntityNotFoundException;
import lombok.extern.slf4j.Slf4j;

@Slf4j
@Service
public class StudentService {

	@Autowired
	StudentRepository studentRepository;

	public Student saveStudent(Student student) {
		return studentRepository.save(student);
	}

	public List<Student> getAllStudents() {
		return studentRepository.findAll();//.stream().filter(student -> student.getName().startsWith("B")).toList();
	}

	public Student getStudent(int id) {
		return studentRepository.findById(id)
				.orElseThrow(() -> new EntityNotFoundException("Student not found with id : " + id));
	}

	public Student updateStudent(Student student) {
		
		if (studentRepository.existsById(student.getRno())) {
			return studentRepository.save(student);
		} else {
			throw new StudentNotFoundException("Student not found with roll no "+student.getRno());
		}
	}

	public Student getStudentByName(String name) {
		log.info("Searching student with name "+name);
		return studentRepository.findByNameIgnoreCase(name)
				.orElseThrow(() -> new StudentNotFoundException("Student not found with name "+name));
	}

	public void deleteStudent(int id) {
		studentRepository.deleteById(id);
	}
	
	public Page<Student> getStudentByPage(int pageNumber,int pageSize)
	{
		return studentRepository.findAll(PageRequest.of(pageNumber, pageSize));
	}
}
